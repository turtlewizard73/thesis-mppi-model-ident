---
/**:
  ros__parameters:
    use_sim_time: $(var simulation)

amcl:
  ros__parameters:
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    # scan_topic: /lidar/base/front/scan_corrected
    scan_topic: /scan
    # base_frame_id: "base_link"
    base_frame_id: "base_footprint"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 100.0
    laser_min_range: -1.0
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 8000
    min_particles: 200
    odom_frame_id: "odom"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: false
    transform_tolerance: 1.0
    update_min_a: 0.2
    update_min_d: 0.25
    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05
    first_map_only: false
    map_topic: /nav/lidarmap

controller_server:
  ros__parameters:
    odom_topic: /odom_combined
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.0
    speed_limit_topic: "/nav/speed_limit"
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins:
      - "stopped_goal_checker"
      - "patrolling_goal_checker"
      - "precise_goal_checker"
    controller_plugins: ["Approach", "Cruise", "Maneuver"]

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::PoseProgressChecker"
      required_movement_radius: 0.2
      required_movement_angle: 0.5
      movement_time_allowance: 5.0
    # Goal checker parameters
    stopped_goal_checker:
      stateful: true
      plugin: "nav2_controller::StoppedGoalChecker"
      xy_goal_tolerance: 1.0
      yaw_goal_tolerance: 3.14
      trans_stopped_velocity: 0.1
      rot_stopped_velocity: 0.1
    patrolling_goal_checker:
      stateful: true
      plugin: "nav2_controller::StoppedGoalChecker"
      xy_goal_tolerance: 1.0
      yaw_goal_tolerance: 6.28  # ignore orientation
      trans_stopped_velocity: 0.1
      rot_stopped_velocity: 10.0  # ignore rotational velocity
    precise_goal_checker:
      stateful: true
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.15
      yaw_goal_tolerance: 0.10

    Maneuver:
      plugin: "nav2_rotation_shim_controller::RotationShimController"
      primary_controller: "nav2_mppi_controller::MPPIController"
      angular_dist_threshold: 1.22 # 70 degrees
      forward_sampling_distance: 0.5
      rotate_to_heading_angular_vel: 1.0
      max_angular_accel: 1.0
      simulate_ahead_time: 1.0

      retry_attempt_limit: 5
      time_steps: 60
      model_dt: 0.05
      batch_size: 2000
      vx_std: 0.2
      vy_std: 0.2
      wz_std: 0.4
      vx_max: 0.254
      vx_min: -0.15
      vy_max: 0.5
      wz_max: 0.322
      iteration_count: 1
      prune_distance: 1.7
      transform_tolerance: 0.1
      temperature: 0.3
      gamma: 0.015
      motion_model: "DiffDrive"
      visualize: false
      reset_period: 1.0
      regenerate_noises: false
      TrajectoryVisualizer:
        trajectory_step: 5
        time_step: 3
      critics: ["ConstraintCritic", "CostCritic", "GoalCritic", "GoalAngleCritic", "PathAlignCritic", "PathFollowCritic", "PathAngleCritic", "PreferForwardCritic"]
      ConstraintCritic:
        enabled: true
        cost_power: 1
        cost_weight: 4.0
      GoalCritic:
        enabled: true
        cost_power: 1
        cost_weight: 5.0
        threshold_to_consider: 1.4
      GoalAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 3.0
        threshold_to_consider: 0.2
      PreferForwardCritic:
        enabled: true
        cost_power: 2
        cost_weight: 15.0
        threshold_to_consider: 0.5
      CostCritic:
        enabled: true
        cost_power: 1
        cost_weight: 2.0
        critical_cost: 100.0
        consider_footprint: true
        collision_cost: 1000000.0
        near_goal_distance: 1.0
        trajectory_point_step: 2
      PathAlignCritic:
        enabled: true
        cost_power: 1
        cost_weight: 14.0
        max_path_occupancy_ratio: 0.05
        trajectory_point_step: 3
        threshold_to_consider: 0.5
        offset_from_furthest: 20
        use_path_orientations: false
      PathFollowCritic:
        enabled: true
        cost_power: 1
        cost_weight: 5.0
        offset_from_furthest: 5
        threshold_to_consider: 1.4
      PathAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 2.0
        offset_from_furthest: 4
        threshold_to_consider: 0.5
        max_angle_to_furthest: 1.0
        mode: 0

    Cruise:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: True
      min_vel_x: 0.0
      min_vel_y: 0.0
      max_vel_x: 0.8
      max_vel_y: 0.0
      max_vel_theta: 1.2
      min_speed_xy: 0.0
      max_speed_xy: 0.8
      min_speed_theta: 0.0
      acc_lim_x: 0.75
      acc_lim_y: 0.0
      acc_lim_theta: 0.75
      decel_lim_x: -2.0
      decel_lim_y: 0.0
      decel_lim_theta: -0.75
      vx_samples: 20
      vy_samples: 0
      vtheta_samples: 20
      sim_time: 1.7
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 0.2
      xy_goal_tolerance: 0.05
      trans_stopped_velocity: 0.05
      short_circuit_trajectory_evaluation: True
      stateful: True
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      BaseObstacle.scale: 0.02
      PathAlign.scale: 32.0
      GoalAlign.scale: 24.0
      PathAlign.forward_point_distance: 0.1
      GoalAlign.forward_point_distance: 0.1
      PathDist.scale: 32.0
      GoalDist.scale: 24.0
      RotateToGoal.scale: 32.0
      RotateToGoal.slowing_factor: 5.0
      RotateToGoal.lookahead_time: -1.0

    Approach:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      desired_linear_vel: 0.1
      lookahead_dist: 0.1
      min_lookahead_dist: 0.05
      max_lookahead_dist: 0.15
      lookahead_time: 1.5
      rotate_to_heading_angular_vel: 0.15
      transform_tolerance: 0.1
      use_velocity_scaled_lookahead_dist: false
      min_approach_linear_velocity: 0.05
      approach_velocity_scaling_dist: 0.08
      use_collision_detection: true
      max_allowed_time_to_collision_up_to_carrot: 1.0
      use_regulated_linear_velocity_scaling: false
      use_fixed_curvature_lookahead: false
      curvature_lookahead_dist: 0.1
      use_cost_regulated_linear_velocity_scaling: false
      regulated_linear_scaling_min_radius: 0.9
      regulated_linear_scaling_min_speed: 0.25
      use_rotate_to_heading: false
      allow_reversing: false
      rotate_to_heading_min_angle: 0.785
      max_angular_accel: 0.1

    # Intermediate planner server params
    tolerance: 0.8  # same as the planner level tolerance should be, but smac doesn't implement this
    n_points_near_goal: 40  # check this many points within goal tolerance if exact goal is not found
    publish_spiral_markers: false
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_smac_planner/SmacPlannerLattice" # In Iron and older versions, "/" was used instead of "::"
      allow_unknown: true                 # Allow traveling in unknown space
      tolerance: 0.25                     # dist-to-goal heuristic cost (distance) for valid tolerance endpoints if exact goal cannot be found.
      max_iterations: 1000000             # Maximum total iterations to search for before failing (in case unreachable), set to -1 to disable
      max_on_approach_iterations: 1000    # Maximum number of iterations after within tolerances to continue to try to find exact solution
      max_planning_time: 5.0              # Max time in s for planner to plan, smooth
      analytic_expansion_ratio: 3.5       # The ratio to attempt analytic expansions during search for final approach.
      analytic_expansion_max_length: 0.5  # For Hybrid/Lattice nodes The maximum length of the analytic expansion to be considered valid to prevent unsafe shortcutting
      analytic_expansion_max_cost: 200.0  # The maximum single cost for any part of an analytic expansion to contain and be valid, except when necessary on approach to goal
      analytic_expansion_max_cost_override: false  #  Whether or not to override the maximum cost setting if within critical distance to goal (ie probably required)
      reverse_penalty: 2.0                # Penalty to apply if motion is reversing, must be => 1
      change_penalty: 0.05                # Penalty to apply if motion is changing directions (L to R), must be >= 0
      non_straight_penalty: 1.05          # Penalty to apply if motion is non-straight, must be => 1
      cost_penalty: 2.0                   # Penalty to apply to higher cost areas when adding into the obstacle map dynamic programming distance expansion heuristic. This drives the robot more towards the center of passages. A value between 1.3 - 3.5 is reasonable.
      rotation_penalty: 5.0               # Penalty to apply to in-place rotations, if minimum control set contains them
      retrospective_penalty: 0.015
      lattice_filepath: "/home/ubuntu/ros2-service-robot/workspace/install/service_robot_bringup/share/service_robot_bringup/config/lattice_2cm_resolution_10cm_turning_radius_diff.json"                # The filepath to the state lattice graph
      lookup_table_size: 20.0             # Size of the dubin/reeds-sheep distance window to cache, in meters.
      cache_obstacle_heuristic: true      # Cache the obstacle map dynamic programming distance expansion heuristic between subsiquent replannings of the same goal location. Dramatically speeds up replanning performance (40x) if costmap is largely static.
      allow_reverse_expansion: false      # If true, allows the robot to use the primitives to expand in the mirrored opposite direction of the current robot's orientation (to reverse).
      smooth_path: True                   # If true, does a simple and quick smoothing post-processing to the path
      smoother:
        max_iterations: 1000
        w_smooth: 0.3
        w_data: 0.2
        tolerance: 1.0e-10
        do_refinement: true
        refinement_num: 2

local_costmap:
  local_costmap:
    ros__parameters:
      # Generated with:
      # python3 common/service_robot_core/service_robot_core/generate_footprint.py --width 0.5 --length 0.66
      # note: turn off footprint_padding to avoid distorted footprint
      footprint: "[[0.080, -0.250],
                   [0.157, -0.238],
                   [0.227, -0.202],
                   [0.282, -0.147],
                   [0.318, -0.077],
                   [0.330, 0.000],
                   [0.318, 0.077],
                   [0.282, 0.147],
                   [0.227, 0.202],
                   [0.157, 0.238],
                   [0.080, 0.250],
                   [0.080, 0.250],
                   [-0.080, 0.250],
                   [-0.080, 0.250],
                   [-0.157, 0.238],
                   [-0.227, 0.202],
                   [-0.282, 0.147],
                   [-0.318, 0.077],
                   [-0.330, 0.000],
                   [-0.318, -0.077],
                   [-0.282, -0.147],
                   [-0.227, -0.202],
                   [-0.157, -0.238],
                   [-0.080, -0.250],
                   [-0.080, -0.250],
                   [0.080, -0.250]]"
      footprint_padding: 0.00
      transform_tolerance: 1.0
      update_frequency: 20.0
      publish_frequency: 20.0
      global_frame: odom
      robot_base_frame: base_link
      rolling_window: true
      width: 3
      height: 3
      resolution: 0.02
      filters: ["speed_filter", "select_controller_binary_filter", "preferred_path_filter"]
      plugins: ["keepout", "pointcloud_stvl_layer", "lidar_obstacle_layer", "inflation_layer", "preferred_side_layer"]
      preferred_path_filter:
        plugin: "nav2_costmap_2d::KeepoutFilter"
        enabled: True
        filter_info_topic: "/nav/preferred_path_filter_info"
      speed_filter:
        plugin: "nav2_costmap_2d::SpeedFilter"
        enabled: True
        filter_info_topic: "/nav/speed_mask_filter_info"
        speed_limit_topic: "/nav/speed_limit"
      select_controller_binary_filter:
        plugin: "nav2_costmap_2d::BinaryFilter"
        enabled: True
        filter_info_topic: "/nav/controller_mask_filter_info"
        default_state: False
        binary_state_topic: "/nav/select_high_speed_controller"
        flip_threshold: 0.3  # m/s
      keepout:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: true
        subscribe_to_updates: true
        transform_tolerance: 1.0
        map_topic: /nav/keepout
      pointcloud_stvl_layer:
        plugin: "spatio_temporal_voxel_layer/SpatioTemporalVoxelLayer"
        voxel_decay:           60.0   # seconds if linear, e^n if exponential
        decay_model:           0      # 0=linear, 1=exponential, -1=persistent
        voxel_size:            0.02   # meters
        min_age_outside_frustum: 0.06 # run time period + 0.01
        track_unknown_space:   true   # default space is unknown
        observation_persistence: 0.0  # seconds
        max_obstacle_height:   1.4    # meters
        mark_threshold:        0      # voxel height
        update_footprint_enabled: true # clear under footprint
        combination_method:    2      # 1=max, 0=override 2=maxWithoutUnknownOverwrite
        obstacle_range:        2.2    # meters, local costmap half diagonal
        origin_z:              0.0    # meters
        publish_voxel_map:     false  # default off
        transform_tolerance:   0.2    # seconds
        mapping_mode:          false  # default off, saves map not for navigation
        observation_sources: top_depth_mark top_depth_clear bottom_depth_mark bottom_depth_clear clear_footprint
        clear_footprint:
          data_type: PointCloud2
          topic: /clear_stvl
          marking: false
          clearing: true
          inf_is_valid: true
          vertical_fov_angle: 0.096  # 5.5 deg
          horizontal_fov_angle: 0.22  # 12.5 deg
          decay_acceleration: 100.0
          obstacle_range: 7.0
          min_obstacle_height: 0.5
          model_type: 0 #default 0 (depth camera). Use 1 for 3D Lidar
          sensor_frame: clear_stvl
        top_depth_mark:
          data_type: PointCloud2
          topic: /depth/top/points_filtered_cropped
          marking: true
          clearing: false
          expected_update_rate: 0.0
          observation_persistence: 0.0
          clear_after_reading: true
          filter: ""
        top_depth_clear:
          data_type: PointCloud2
          topic: /depth/top/points_filtered_cropped
          marking: false
          clearing: true
          inf_is_valid: true
          vertical_fov_angle: 1.15191731 # 66 deg
          horizontal_fov_angle: 1.58824962 # 91 deg
          decay_acceleration: 100.0 # if I comment this out, it doesn't work
          model_type: 0 #default 0 (depth camera). Use 1 for 3D Lidar
        bottom_depth_mark:
          data_type: PointCloud2
          topic: /depth/base/points_filtered_cropped
          marking: true
          clearing: false
          expected_update_rate: 0.0
          observation_persistence: 0.0
          clear_after_reading: true
          filter: ""
        bottom_depth_clear:
          data_type: PointCloud2
          topic: /depth/base/points_filtered_cropped
          marking: false
          clearing: true
          inf_is_valid: true
          vertical_fov_angle: 1.15191731 # 66 deg
          horizontal_fov_angle: 1.58824962 # 91 deg
          decay_acceleration: 100.0 # if I comment this out, it doesn't work
          model_type: 0 #default 0 (depth camera). Use 1 for 3D Lidar
      lidar_obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        footprint_clearing_enabled: true
        combination_method: 2 # MaxWithoutUnknownOverwrite
        observation_sources: lidar_base_front lidar_base_rear
        lidar_base_front:
          data_type: "LaserScan"
          topic: /lidar/base/front/scan_corrected
          marking: true
          clearing: true
          inf_is_valid: true
          max_obstacle_height: 1.5
        lidar_base_rear:
          data_type: "LaserScan"
          topic: /lidar/base/rear/scan
          marking: true
          clearing: true
          inf_is_valid: true
          max_obstacle_height: 1.5
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 1.0
        cost_scaling_factor: 4.0
        inflate_unknown: false
        inflate_around_unknown: true
      always_send_full_costmap: true
      preferred_side_layer:
        plugin: "service_robot_costmap_plugins::PreferredSideLayer"
        enabled: True
        prefer_left: False
        cost_difference: 240  # add this much cost opposite to preferred side
        linear_cost: true  # if true, cost difference is linear, else step function
        y_offset_m: 0.15  # in this radius, no cost is added

global_costmap:
  global_costmap:
    ros__parameters:
      # Generated with:
      # python3 common/service_robot_core/service_robot_core/generate_footprint.py --width 0.5 --length 0.66
      # note: turn off footprint_padding to avoid distorted footprint
      footprint: "[[0.080, -0.250],
                   [0.157, -0.238],
                   [0.227, -0.202],
                   [0.282, -0.147],
                   [0.318, -0.077],
                   [0.330, 0.000],
                   [0.318, 0.077],
                   [0.282, 0.147],
                   [0.227, 0.202],
                   [0.157, 0.238],
                   [0.080, 0.250],
                   [0.080, 0.250],
                   [-0.080, 0.250],
                   [-0.080, 0.250],
                   [-0.157, 0.238],
                   [-0.227, 0.202],
                   [-0.282, 0.147],
                   [-0.318, 0.077],
                   [-0.330, 0.000],
                   [-0.318, -0.077],
                   [-0.282, -0.147],
                   [-0.227, -0.202],
                   [-0.157, -0.238],
                   [-0.080, -0.250],
                   [-0.080, -0.250],
                   [0.080, -0.250]]"
      footprint_padding: 0.00
      rolling_window: false
      width: 30  # default, overwritten by lidarmap from map_manager
      height: 30  # default, overwritten by lidarmap from map_manager
      update_frequency: 5.0
      publish_frequency: 5.0
      global_frame: map
      robot_base_frame: base_link
      resolution: 0.05
      track_unknown_space: true
      use_maximum: true
      filters: ["preferred_path_filter"]
      preferred_path_filter:
        plugin: "nav2_costmap_2d::KeepoutFilter"
        enabled: True
        filter_info_topic: "/nav/preferred_path_filter_info"
      plugins: ["lidarmap", "keepout", "inflation_layer"]
      lidarmap:
        plugin: "nav2_costmap_2d::StaticLayer"
        footprint_clearing_enabled: true
        map_subscribe_transient_local: true
        subscribe_to_updates: true
        transform_tolerance: 1.0
        map_topic: /nav/lidarmap
      keepout:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: true
        subscribe_to_updates: true
        transform_tolerance: 1.0
        map_topic: /nav/keepout
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 1.0
        cost_scaling_factor: 3.0
        inflate_unknown: false
        inflate_around_unknown: true
      always_send_full_costmap: true

planner_server:
  ros__parameters:
    expected_planner_frequency: 1.0
    planner_plugins: ["GridBased", "Approach"]

    Approach:
      plugin: "dubin_planner/DubinPlanner"
      number_of_points: 100
      turning_radius: 0.1
      check_for_collision: false

    GridBased:
      plugin: "nav2_smac_planner/SmacPlanner2D"
      tolerance: 0.125
      downsample_costmap: false
      downsampling_factor: 1
      allow_unknown: false
      max_iterations: -1
      max_on_approach_iterations: 1000
      max_planning_time: 2.0
      cost_travel_multiplier: 3.0
      use_final_approach_orientation: false


behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 5.0
    cmd_vel_teleop: '/cmd_vel/assisted'
    behavior_plugins: ["spin", "backup", "wait", "drive_on_heading", "assisted_teleop"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    wait:
      plugin: "nav2_behaviors/Wait"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"
    global_frame: odom
    robot_base_frame: base_link
    transform_timeout: 0.1
    simulate_ahead_time: 2.0
    max_rotational_vel: 0.4
    min_rotational_vel: 0.05
    rotational_acc_lim: 3.2

waypoint_follower:
  ros__parameters:
    loop_rate: 10
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: true
      waypoint_pause_duration: 200

speed_mask_filter_info_server:
  ros__parameters:
    type: 2  # 1 = percentage, 2 = absolute value
    filter_info_topic: "/nav/speed_mask_filter_info"
    mask_topic: "/nav/speed_filter_mask"
    # speed range: 0.1 - 1.5
    base: 1.5
    multiplier: -0.014

controller_mask_filter_info_server:
  ros__parameters:
    type: 3  # 3: binary
    filter_info_topic: "/nav/controller_mask_filter_info"
    mask_topic: "/nav/speed_filter_mask"
    # speed range: 0.1 - 1.5
    base: 1.5
    multiplier: -0.014

preferred_path_filter_info_server:
  ros__parameters:
    type: 0
    filter_info_topic: "/nav/preferred_path_filter_info"
    mask_topic: "/nav/preferred_path_map"
    base: 0.0
    multiplier: 1.0

collision_detector:
  ros__parameters:
    base_frame_id: "base_link"
    odom_frame_id: "odom"
    transform_tolerance: 0.5
    source_timeout: 5.0
    base_shift_correction: True
    polygons: ["PolygonNearObstacles"]
    PolygonNearObstacles:
      type: "polygon"
      points: [1.2, 0.3, 1.2, -0.3, -0.3, -0.3, -0.3, 0.3]
      action_type: "none"
      min_points: 4
      visualize: True
      polygon_pub_topic: "polygon_front"
    observation_sources: ["front_scan", "rear_scan", "depth_camera_top", "depth_camera_base"]
    front_scan:
      type: "scan"
      topic: "/lidar/base/front/scan_corrected"
    rear_scan:
      type: "scan"
      topic: "/lidar/base/rear/scan"
    depth_camera_top:
      type: "pointcloud"
      topic: "/depth/top/points_filtered_cropped"
      min_height: 0.1
      max_height: 1.5
      enabled: True
    depth_camera_base:
      type: "pointcloud"
      topic: "/depth/base/points_filtered_cropped"
      min_height: 0.1
      max_height: 1.5
      enabled: True
