---
navigation_executor:
  ros__parameters:
    use_sim_time: true
    enable_groot_monitoring: false
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odom_combined
    average_linear_speed: 0.20
    average_angular_speed: 0.50
    goal_reached_tol: 1.25 # For pausing pose_relay
    bt_loop_duration: 10
    default_server_timeout: 20
    default_nav_to_pose_bt_xml: placeholder # This will get rewritten, refer to the navigation.launch.py
    navigators: ['navigate_to_pose']
    navigate_to_pose:
      plugin: "nav2_bt_navigator/NavigateToPoseNavigator"
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_goal_checker_selector_bt_node
      - nav2_truncate_path_action_bt_node
      - send_string_bt_node
      - send_float_bt_node
      - assert_localization_ok_bt_node
      - cmd_vel_relay_bt_node
      - trigger_event_bt_node
      - on_fail_bt_node
      - get_table_pose_bt_node
      - sequence_with_blackboard_memory_node
      - nav2_goal_reached_condition_bt_node
    error_code_names:
      - compute_path_error_code
      - follow_path_error_code
      - get_node_error_code
      - get_table_pose_error_code
      - spin_error_code
      - backup_error_code

controller_server:
  ros__parameters:
    use_sim_time: true
    odom_topic: /odom_combined
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.0
    speed_limit_topic: "/nav/speed_limit"
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins:
      - "patrolling_goal_checker"
      - "precise_goal_checker"
      - "approach_goal_checker"
    controller_plugins: ["Approach", "FollowPath"]

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.1
      movement_time_allowance: 15.0
    # Goal checker parameters
    patrolling_goal_checker:
      stateful: true
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 1.0
      yaw_goal_tolerance: 6.28
    precise_goal_checker:
      stateful: true
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.10
      yaw_goal_tolerance: 0.10
    approach_goal_checker:
      stateful: true
      plugin: "nav2_controller::SimpleGoalChecker"
      # Add half footprint, goal is calculated from robot center
      # (footprint + padding) * (1 + sin(yaw_tolerance)) =
      # (0.26 + 0.05) * (1 + sin())
      xy_goal_tolerance: 0.41
      yaw_goal_tolerance: 0.30  # ~ 18 deg

    FollowPath:
      plugin: "nav2_mppi_controller::MPPIController"
      time_steps: 60
      model_dt: 0.05
      batch_size: 2000
      vx_std: 0.2
      vy_std: 0.2
      wz_std: 0.4
      vx_max: 1.5
      vx_min: -0.15
      vy_max: 0.5
      wz_max: 1.9
      iteration_count: 1
      prune_distance: 1.7
      transform_tolerance: 0.1
      temperature: 0.3
      gamma: 0.015
      motion_model: "DiffDrive"
      visualize: false
      reset_period: 1.0
      regenerate_noises: false
      TrajectoryVisualizer:
        trajectory_step: 5
        time_step: 3
      AckermannConstraints:
        min_turning_r: 0.1
      critics: ["ConstraintCritic", "ObstaclesCritic", "GoalCritic", "GoalAngleCritic", "PathAlignCritic", "PathFollowCritic", "PathAngleCritic", "PreferForwardCritic"]
      ConstraintCritic:
        enabled: true
        cost_power: 1
        cost_weight: 4.0
      GoalCritic:
        enabled: true
        cost_power: 1
        cost_weight: 5.0
        threshold_to_consider: 1.4
      GoalAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 3.0
        threshold_to_consider: 0.2
      PreferForwardCritic:
        enabled: true
        cost_power: 2
        cost_weight: 15.0
        threshold_to_consider: 0.5
      ObstaclesCritic:
        enabled: true
        cost_power: 1
        repulsion_weight: 1.5
        critical_weight: 20.0
        consider_footprint: false
        collision_cost: 10000.0
        collision_margin_distance: 0.1
        near_goal_distance: 0.5
        inflation_radius: 1.0 # (only in Humble)
        cost_scaling_factor: 3.0 # (only in Humble)
      PathAlignCritic:
        enabled: true
        cost_power: 1
        cost_weight: 14.0
        max_path_occupancy_ratio: 0.05
        trajectory_point_step: 3
        threshold_to_consider: 0.5
        offset_from_furthest: 20
        use_path_orientations: false
      PathFollowCritic:
        enabled: true
        cost_power: 1
        cost_weight: 5.0
        offset_from_furthest: 5
        threshold_to_consider: 1.4
      PathAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 2.0
        offset_from_furthest: 4
        threshold_to_consider: 0.5
        max_angle_to_furthest: 1.0
        mode: 0

    Approach:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      desired_linear_vel: 0.1
      lookahead_dist: 0.1
      min_lookahead_dist: 0.05
      max_lookahead_dist: 0.15
      lookahead_time: 1.5
      rotate_to_heading_angular_vel: 0.15
      transform_tolerance: 0.1
      use_velocity_scaled_lookahead_dist: false
      min_approach_linear_velocity: 0.05
      approach_velocity_scaling_dist: 0.08
      use_collision_detection: true
      max_allowed_time_to_collision_up_to_carrot: 1.0
      use_regulated_linear_velocity_scaling: false
      use_fixed_curvature_lookahead: false
      curvature_lookahead_dist: 0.1
      use_cost_regulated_linear_velocity_scaling: false
      regulated_linear_scaling_min_radius: 0.9
      regulated_linear_scaling_min_speed: 0.25
      use_rotate_to_heading: false
      allow_reversing: false
      rotate_to_heading_min_angle: 0.785
      max_angular_accel: 0.1

local_costmap:
  local_costmap:
    ros__parameters:
      use_sim_time: true
      footprint: "[[0.26, 0.19], [-0.26, 0.19], [-0.26, -0.19], [0.26, -0.19]]"
      footprint_padding: 0.05
      transform_tolerance: 1.0
      update_frequency: 5.0
      publish_frequency: 5.0
      global_frame: odom
      robot_base_frame: base_link
      rolling_window: true
      width: 3
      height: 3
      resolution: 0.02
      plugins: ["static_layer", "temporal_voxel_layer", "lidar_obstacle_layer", "inflation_layer"]
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: false
        subscribe_to_updates: true
        transform_tolerance: 1.0
        map_topic: /nav/lidar_with_keepout_map
      temporal_voxel_layer:
        plugin: "spatio_temporal_voxel_layer/SpatioTemporalVoxelLayer"
        voxel_decay:           5.0   # seconds if linear, e^n if exponential
        decay_model:           0      # 0=linear, 1=exponential, -1=persistent
        voxel_size:            0.02   # meters
        track_unknown_space:   true   # default space is unknown
        observation_persistence: 0.0  # seconds
        max_obstacle_height:   2.0    # meters
        mark_threshold:        0      # voxel height
        update_footprint_enabled: false
        combination_method:    2      # 1=max, 0=override 2=maxWithoutUnknownOverwrite
        obstacle_range:        2.0    # meters
        origin_z:              0.0    # meters
        publish_voxel_map:     true   # default off
        transform_tolerance:   0.2    # seconds
        mapping_mode:          false  # default off, saves map not for navigation
        map_save_duration:     60.0   # default 60s, how often to autosave
        observation_sources:   tray_tof_clear tray_tof_mark front_realsense_camera_mark front_realsense_camera_clear
        tray_tof_clear:
          data_type: PointCloud2
          topic: /front_tof_camera/cloud_filtered
          marking: false
          clearing: true
          vertical_fov_angle: 1.05     # ~60 degrees
          horizontal_fov_angle: 1.22   # ~70 degrees
          inf_is_valid: true           # default false, for laser scans
          decay_acceleration: 100.0
          clear_after_reading: true    # default false, clear the buffer after the layer gets readings from it
        tray_tof_mark:
          data_type: PointCloud2
          topic: /front_tof_camera/cloud_filtered
          marking: true
          clearing: false
          min_obstacle_height: 0.5
          max_obstacle_height: 2.0
          clear_after_reading: true
          filter: "voxel"
          voxel_min_points: 2
        front_realsense_camera_mark:
          data_type: PointCloud2
          topic: /d435_camera/depth/color/points
          marking: true
          clearing: false
          min_obstacle_height: 0.05    # default 0, meters
          max_obstacle_height: 1.7     # default 3, meters
          inf_is_valid: false          # default false, for laser scans
          filter: "voxel"              # default passthrough, apply "voxel", "passthrough", or no filter to sensor data, recommended to have at one filter on
          voxel_min_points: 3          # default 0, minimum points per voxel for voxel filter
          clear_after_reading: true    # default false, clear the buffer after the layer gets readings from it
        front_realsense_camera_clear:
          data_type: PointCloud2
          topic: /d435_camera/depth/color/points
          decay_acceleration: 100.0
          marking: false
          clearing: true
          vertical_fov_angle: 0.994837674    # ~57 degrees
          horizontal_fov_angle: 1.500983157  # ~86 degrees
          inf_is_valid: true
          clear_after_reading: true
      lidar_obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        footprint_clearing_enabled: true
        combination_method: 2 # MaxWithoutUnknownOverwrite
        observation_sources: front_lidar rear_lidar
        front_lidar:
          data_type: LaserScan
          topic: /front_lidar/scan
          marking: true
          clearing: true
          inf_is_valid: true
        rear_lidar:
          data_type: LaserScan
          topic: /rear_lidar/scan
          marking: true
          clearing: true
          inf_is_valid: true
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 1.0
        cost_scaling_factor: 4.0
        inflate_unknown: false
        inflate_around_unknown: true
      always_send_full_costmap: true

global_costmap:
  global_costmap:
    ros__parameters:
      use_sim_time: true
      footprint: "[[0.26, 0.19], [-0.26, 0.19], [-0.26, -0.19], [0.26, -0.19]]"
      footprint_padding: 0.05
      rolling_window: false
      width: 30  # default, overwritten by lidarmap from map_manager
      height: 30  # default, overwritten by lidarmap from map_manager
      map_subscribe_transient_local: false
      update_frequency: 5.0
      publish_frequency: 5.0
      global_frame: map
      robot_base_frame: base_link
      resolution: 0.05
      track_unknown_space: true
      filters: ["speed_filter", "keepout_filter"]
      speed_filter:
        plugin: "nav2_costmap_2d::SpeedFilter"
        enabled: True
        filter_info_topic: "/nav/speed_mask_filter_info"
        speed_limit_topic: "/nav/speed_limit"
      keepout_filter:
        plugin: "nav2_costmap_2d::KeepoutFilter"
        enabled: True
        filter_info_topic: "/nav/preferred_path_filter_info"
      plugins: ["static_layer", "lidar_obstacle_layer", "inflation_layer"]
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: false
        subscribe_to_updates: true
        transform_tolerance: 1.0
        map_topic: /nav/lidar_with_keepout_map
      lidar_obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        footprint_clearing_enabled: true
        combination_method: 2 # MaxWithoutUnknownOverwrite
        observation_sources: front_lidar rear_lidar
        front_lidar:
          data_type: LaserScan
          topic: /front_lidar/scan
          marking: true
          clearing: true
          inf_is_valid: true
        rear_lidar:
          data_type: LaserScan
          topic: /rear_lidar/scan
          marking: true
          clearing: true
          inf_is_valid: true
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 1.0
        cost_scaling_factor: 3.0
        inflate_unknown: false
        inflate_around_unknown: true
      always_send_full_costmap: true

planner_server:
  ros__parameters:
    expected_planner_frequency: 1.0
    planner_plugins: ["GridBased", "Approach"]
    use_sim_time: true

    Approach:
      plugin: "dubin_planner/DubinPlanner"
      number_of_points: 100
      turning_radius: 0.1
      check_for_collision: false

    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: false
      allow_unknown: false

behavior_server:
  ros__parameters:
    use_sim_time: true
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 5.0
    behavior_plugins: ["spin", "backup", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    wait:
      plugin: "nav2_behaviors/Wait"
    global_frame: odom
    robot_base_frame: base_link
    transform_timeout: 0.1
    simulate_ahead_time: 2.0
    max_rotational_vel: 0.4
    min_rotational_vel: 0.05
    rotational_acc_lim: 3.2

waypoint_follower:
  ros__parameters:
    use_sim_time: true
    loop_rate: 10
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: true
      waypoint_pause_duration: 200

speed_mask_filter_info_server:
  ros__parameters:
    use_sim_time: true
    type: 2  # 1 = percentage, 2 = absolute value
    filter_info_topic: "/nav/speed_mask_filter_info"
    mask_topic: "/nav/speed_filter_mask"
    # speed range: 0.1 - 1.5
    base: 1.5
    multiplier: -0.014

preferred_path_filter_info_server:
  ros__parameters:
    use_sim_time: true
    type: 0
    filter_info_topic: "/nav/preferred_path_filter_info"
    mask_topic: "/nav/preferred_path_map"
    base: 0.0
    multiplier: 1.0
